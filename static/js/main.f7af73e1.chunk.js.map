{"version":3,"sources":["components/AuthenticatedRoute/AuthenticatedRoute.js","components/AutoDismissAlert/AutoDismissAlert.js","components/Header/Header.js","apiConfig.js","api/auth.js","components/auth/SignUp.js","components/AutoDismissAlert/messages.js","components/auth/SignIn.js","components/auth/SignOut.js","components/auth/ChangePassword.js","api/story.js","components/story/Index.js","components/story/Create.js","components/story/Show.js","components/story/Update.js","components/comments/Create.js","api/comment.js","components/homepage/Home.js","App.js","index.js"],"names":["AuthenticatedRoute","user","Component","component","render","rest","props","to","AutoDismissAlert","handleClose","setState","show","state","timeoutId","this","setTimeout","clearTimeout","variant","heading","message","deleteAlert","id","Alert","dismissible","onClose","className","Heading","React","authenticatedOptions","unauthenticatedOptions","alwaysOptions","Header","Navbar","expand","Brand","Toggle","aria-controls","Collapse","Nav","style","margin","email","apiUrls","apiUrl","window","location","hostname","signIn","credentials","axios","url","method","data","password","SignUp","handleChange","event","target","name","value","onSignUp","preventDefault","msgAlert","history","setUser","password_confirmation","passwordConfirmation","then","res","push","catch","error","Form","onSubmit","Group","controlId","Label","Control","required","type","placeholder","onChange","Button","size","withRouter","SignIn","onSignIn","SignOut","clearUser","headers","Authorization","token","signOut","finally","ChangePassword","onChangePassword","passwords","old","oldPassword","new","newPassword","changePassword","showStory","IndexStories","stories","indexStories","storiesJSX","userOnly","length","filter","story","owner","_id","map","Col","Card","border","background-color","title","Body","Title","description","Subtitle","author","src","process","Row","xs","md","CreateStory","handleSubmit","createStory","err","date","content","as","rows","ShowStory","handleDelete","match","deleteStory","params","handleLike","storyId","isLiked","liked","like","likes","likeStatus","likeStory","findIndex","moment","utc","format","onClick","UpdateStory","updateStory","LeaveComment","comment","createComment","HomePage","App","msgAlerts","msg","uuid","exact","path","Home","Create","Index","Show","Update","appJsx","basename","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.f7af73e1.chunk.js","sourcesContent":["import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\n\n// props will include a `user` object or empty object\n// props will include a `component` as `Component` or a `render`\n// all other props that may be passed in are `..rest`\nconst AuthenticatedRoute = ({\n  user,\n  component: Component,\n  render,\n  ...rest\n}) => {\n  // if props include a `user` object and a `render` then create route with `render`\n  if (user && render) {\n    return <Route {...rest} render={render} />\n\n    // if props include a `user` object but no `render` then create route with `Component`\n    // if props do not include a `user` object then redirect to home\n  } else {\n    return (\n      <Route\n        {...rest}\n        render={(props) =>\n          user ? <Component {...props} /> : <Redirect to='/' />\n        }\n      />\n    )\n  }\n}\n\nexport default AuthenticatedRoute\n","import React from 'react'\nimport Alert from 'react-bootstrap/Alert'\n\nimport './AutoDismissAlert.scss'\n\nclass AutoDismissAlert extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      show: true\n    }\n    this.timeoutId = null\n  }\n\n  componentDidMount () {\n    this.timeoutId = setTimeout(this.handleClose, 5000)\n  }\n\n  componentWillUnmount () {\n    clearTimeout(this.timeoutId)\n  }\n\nhandleClose = () => this.setState({ show: false })\n\nrender () {\n  const { variant, heading, message, deleteAlert, id } = this.props\n\n  // Delete this alert after the fade animation time (300 ms by default)\n  if (!this.state.show) {\n    setTimeout(() => {\n      deleteAlert(id)\n    }, 300)\n  }\n\n  return (\n    <Alert\n      dismissible\n      show={this.state.show}\n      variant={variant}\n      onClose={this.handleClose}>\n      <div className='container'>\n        <Alert.Heading>{heading}</Alert.Heading>\n        <p className='alert-body'>{message}</p>\n      </div>\n    </Alert>\n  )\n}\n}\n\nexport default AutoDismissAlert\n","import React, { Fragment } from 'react'\nimport Nav from 'react-bootstrap/Nav'\nimport Navbar from 'react-bootstrap/Navbar'\nimport { Link, NavLink } from 'react-router-dom'\nimport '../../index.scss'\n\nconst authenticatedOptions = (\n  <Fragment>\n    <NavLink to='/all-stories' className='nav-link'>Read A Story</NavLink>\n    <NavLink to='/tell-a-story' className='nav-link'>Tell A Story</NavLink>\n    <NavLink to='/my-stories' className='nav-link'>My Stories</NavLink>\n    <NavLink to='/change-password' className='nav-link'>Change Password</NavLink>\n    <NavLink to='/sign-out' className='nav-link'>Sign Out</NavLink>\n  </Fragment>\n)\n\nconst unauthenticatedOptions = (\n  <Fragment>\n    <NavLink to='/sign-up' className='nav-link'>Sign Up</NavLink>\n    <NavLink to='/sign-in' className='nav-link'>Sign In</NavLink>\n  </Fragment>\n)\n\nconst alwaysOptions = (\n  <Fragment>\n    {/* <NavLink exact to='/' className='nav-link'>Home</NavLink> */}\n  </Fragment>\n)\n\nconst Header = ({ user }) => (\n  <Navbar className='navbar-style' variant='dark' expand='lg'>\n    <Navbar.Brand>\n      <Link to='/'><span className='app-name-style'>StoryTellers</span></Link>\n    </Navbar.Brand>\n    <Navbar.Toggle aria-controls='basic-navbar-nav' />\n    <Navbar.Collapse id='basic-navbar-nav'>\n      <Nav className='ml-auto'>\n        {user && (\n          <span className='navbar-text mr-2' style={{ margin: '0 10px 0 10px' }}>Welcome, {user.email}</span>\n        )}\n        {alwaysOptions}\n        {user ? authenticatedOptions : unauthenticatedOptions}\n      </Nav>\n    </Navbar.Collapse>\n  </Navbar>\n)\n\nexport default Header\n","let apiUrl\nconst apiUrls = {\n  production: 'https://infinite-island-44375.herokuapp.com',\n  development: 'http://localhost:4741'\n}\n\nif (window.location.hostname === 'localhost') {\n  apiUrl = apiUrls.development\n} else {\n  apiUrl = apiUrls.production\n}\n\nexport default apiUrl\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\nexport const signUp = (credentials) => {\n  return axios({\n    method: 'POST',\n    url: apiUrl + '/sign-up/',\n    data: {\n      credentials: {\n        email: credentials.email,\n        password: credentials.password,\n        password_confirmation: credentials.passwordConfirmation\n      }\n    }\n  })\n}\n\nexport const signIn = (credentials) => {\n  return axios({\n    url: apiUrl + '/sign-in/',\n    method: 'POST',\n    data: {\n      credentials: {\n        email: credentials.email,\n        password: credentials.password\n      }\n    }\n  })\n}\n\nexport const signOut = (user) => {\n  return axios({\n    url: apiUrl + '/sign-out/',\n    method: 'DELETE',\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n\nexport const changePassword = (passwords, user) => {\n  return axios({\n    url: apiUrl + '/change-password/',\n    method: 'PATCH',\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    },\n    data: {\n      passwords: {\n        old: passwords.oldPassword,\n        new: passwords.newPassword\n      }\n    }\n  })\n}\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { signUp, signIn } from '../../api/auth'\nimport { signUpSuccess, signUpFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nclass SignUp extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      email: '',\n      password: '',\n      passwordConfirmation: ''\n    }\n  }\n\nhandleChange = (event) =>\n  this.setState({\n    [event.target.name]: event.target.value\n  })\n\nonSignUp = (event) => {\n  event.preventDefault()\n\n  const { msgAlert, history, setUser } = this.props\n\n  signUp(this.state)\n    .then(() => signIn(this.state))\n    .then((res) => setUser(res.data.user))\n    .then(() =>\n      msgAlert({\n        heading: 'Sign Up Success',\n        message: signUpSuccess,\n        variant: 'success'\n      })\n    )\n    .then(() => history.push('/'))\n    .catch((error) => {\n      this.setState({ email: '', password: '', passwordConfirmation: '' })\n      msgAlert({\n        heading: 'Sign Up Failed with error: ' + error.message,\n        message: signUpFailure,\n        variant: 'danger'\n      })\n    })\n}\n\nrender () {\n  const { email, password, passwordConfirmation } = this.state\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Sign Up</h3>\n        <Form onSubmit={this.onSignUp}>\n          <Form.Group controlId='email'>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              required\n              type='email'\n              name='email'\n              value={email}\n              placeholder='Enter email'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              name='password'\n              value={password}\n              type='password'\n              placeholder='Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='passwordConfirmation'>\n            <Form.Label>Password Confirmation</Form.Label>\n            <Form.Control\n              required\n              name='passwordConfirmation'\n              value={passwordConfirmation}\n              type='password'\n              placeholder='Confirm Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Button variant='primary' size='sm' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n}\n\nexport default withRouter(SignUp)\n","export const signUpSuccess = 'Succesfully registered! You\\'ve been signed in as well.'\nexport const signUpFailure = 'Registration failed. Email may be taken, or passwords don\\'t match.'\nexport const signInSuccess = 'Welcome!'\nexport const signInFailure = 'Failed to sign in. Check your email and password and try again.'\nexport const signOutSuccess = 'Come back soon!'\nexport const changePasswordSuccess = 'Password changed successfully!'\nexport const changePasswordFailure = 'Failed to change passwords. Check your old password and try again.'\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { signIn } from '../../api/auth'\nimport { signInSuccess, signInFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nclass SignIn extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      email: '',\n      password: ''\n    }\n  }\n\nhandleChange = (event) =>\n  this.setState({\n    [event.target.name]: event.target.value\n  })\n\nonSignIn = (event) => {\n  event.preventDefault()\n\n  const { msgAlert, history, setUser } = this.props\n\n  signIn(this.state)\n    .then((res) => setUser(res.data.user))\n    .then(() =>\n      msgAlert({\n        heading: 'Sign In Success',\n        message: signInSuccess,\n        variant: 'success'\n      })\n    )\n    .then(() => history.push('/'))\n    .catch((error) => {\n      this.setState({ email: '', password: '' })\n      msgAlert({\n        heading: 'Sign In Failed with error: ' + error.message,\n        message: signInFailure,\n        variant: 'danger'\n      })\n    })\n}\n\nrender () {\n  const { email, password } = this.state\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Sign In</h3>\n        <Form onSubmit={this.onSignIn}>\n          <Form.Group controlId='email'>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              required\n              type='email'\n              name='email'\n              value={email}\n              placeholder='Enter email'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              name='password'\n              value={password}\n              type='password'\n              placeholder='Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Button variant='primary' size='sm' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n}\n\nexport default withRouter(SignIn)\n","import { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { signOut } from '../../api/auth'\nimport { signOutSuccess } from '../AutoDismissAlert/messages'\n\nclass SignOut extends Component {\n  componentDidMount () {\n    const { msgAlert, history, clearUser, user } = this.props\n\n    signOut(user)\n      .finally(() =>\n        msgAlert({\n          heading: 'Signed Out Successfully',\n          message: signOutSuccess,\n          variant: 'success'\n        })\n      )\n      .finally(() => history.push('/'))\n      .finally(() => clearUser())\n  }\n\n  render () {\n    return ''\n  }\n}\n\nexport default withRouter(SignOut)\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { changePassword } from '../../api/auth'\nimport { changePasswordSuccess, changePasswordFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nclass ChangePassword extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      oldPassword: '',\n      newPassword: ''\n    }\n  }\n\nhandleChange = (event) =>\n  this.setState({\n    [event.target.name]: event.target.value\n  })\n\nonChangePassword = (event) => {\n  event.preventDefault()\n\n  const { msgAlert, history, user } = this.props\n\n  changePassword(this.state, user)\n    .then(() =>\n      msgAlert({\n        heading: 'Change Password Success',\n        message: changePasswordSuccess,\n        variant: 'success'\n      })\n    )\n    .then(() => history.push('/'))\n    .catch((error) => {\n      this.setState({ oldPassword: '', newPassword: '' })\n      msgAlert({\n        heading: 'Change Password Failed with error: ' + error.message,\n        message: changePasswordFailure,\n        variant: 'danger'\n      })\n    })\n}\n\nrender () {\n  const { oldPassword, newPassword } = this.state\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Change Password</h3>\n        <Form onSubmit={this.onChangePassword}>\n          <Form.Group controlId='oldPassword'>\n            <Form.Label>Old password</Form.Label>\n            <Form.Control\n              required\n              name='oldPassword'\n              value={oldPassword}\n              type='password'\n              placeholder='Old Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='newPassword'>\n            <Form.Label>New Password</Form.Label>\n            <Form.Control\n              required\n              name='newPassword'\n              value={newPassword}\n              type='password'\n              placeholder='New Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Button variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n}\n\nexport default withRouter(ChangePassword)\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\nexport const indexStories = user => {\n  return axios({\n    method: 'GET',\n    url: apiUrl + '/stories',\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\nexport const createStory = (data, user) => {\n  return axios({\n    method: 'POST',\n    url: apiUrl + '/stories',\n    data: {\n      story: data\n    },\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\nexport const showStory = (id, user) => {\n  return axios({\n    method: 'GET',\n    url: apiUrl + '/stories/' + id,\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\nexport const deleteStory = (id, user) => {\n  return axios({\n    method: 'DELETE',\n    url: apiUrl + '/stories/' + id,\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n\nexport const updateStory = (data, id, user) => {\n  return axios({\n    method: 'PATCH',\n    url: apiUrl + '/stories/' + id,\n    data: {\n      story: {\n        title: data.title,\n        author: data.author,\n        description: data.description,\n        date: data.date,\n        content: data.content\n\n      }\n    },\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n\nexport const likeStory = (id, user, like, storyId) => {\n  return axios({\n    method: 'PATCH',\n    url: apiUrl + '/like/' + id,\n    data: {\n      storyId: storyId,\n      likes: {\n        user: user._id,\n        likeStatus: like\n      }\n    },\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n","import React, { Component } from 'react'\nimport { indexStories } from '../../api/story'\nimport { Link } from 'react-router-dom'\nimport Card from 'react-bootstrap/Card'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport '../../index.scss'\n// import moment from 'moment'\n\nclass IndexStories extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      stories: null\n    }\n  }\n\n  componentDidMount () {\n    const { user, msgAlert } = this.props\n\n    indexStories(user)\n      .then((res) => this.setState({ stories: res.data.stories }))\n      .then(() => {\n        msgAlert({\n          heading: 'Success!',\n          message: 'Enjoy Reading!',\n          variant: 'success'\n        })\n      })\n      .catch(error => {\n        msgAlert({\n          heading: 'Index Failed',\n          message: 'Index Error: ' + error.message,\n          variant: 'danger'\n        })\n      })\n  }\n\n  render () {\n    const { stories } = this.state\n    const { userOnly, user } = this.props\n    if (stories === null) {\n      return 'Loading...'\n    }\n\n    let storiesJSX\n    // checking if there are no stories in the entire app\n    if (stories.length === 0) {\n      storiesJSX = 'Be the first to tell a story!'\n      // checking if user is not logged-in\n    // } else if (user) {\n    //   storiesJSX = stories.map((story) => (\n    //     <Col key={story._id}>\n    //       <Card border='secondary'>\n    //         <Card.Header>\n    //           <Link\n    //             className='story-link'\n    //             to={`/all-stories/${story._id}`}>\n    //             {story.title}\n    //           </Link>\n    //         </Card.Header>\n    //         <Card.Body>\n    //           <Card.Title>{story.author}</Card.Title>\n    //           <Card.Subtitle>\n    //             {story.description}\n    //           </Card.Subtitle>\n    //           {/* <Card.Text>{story.likes.length} Likes</Card.Text> */}\n    //         </Card.Body>\n    //       </Card>\n    //     </Col>\n    //   ))\n    } else if (userOnly) {\n      // filtering events then mapping through the event where owner is equal to user id\n      storiesJSX = stories.filter(story => story.owner === user._id).map(story => (\n        <Col key={story._id}>\n          <Card border=\"secondary\" background-color=\"#6a994e\">\n            <Card.Header>\n              <Link\n                className='story-link'\n                to={`/stories/${story._id}/`}>\n                {story.title}\n              </Link>\n            </Card.Header>\n            <Card.Body>\n              <Card.Title>\n                {story.description}\n              </Card.Title>\n              <Card.Subtitle>\n                {story.author}\n              </Card.Subtitle>\n              {/* <Card.Text>\n                {moment(date).format('MM-DD-YYYY')}\n              </Card.Text> */}\n            </Card.Body>\n          </Card>\n        </Col>\n      ))\n      // checking if user has no events\n      if (storiesJSX.length === 0) {\n        storiesJSX = 'Write a story'\n      }\n    // mapping through events if userOnly is false\n    } else {\n      storiesJSX = stories.map((story) => (\n        <Col key={story._id}>\n          <Card border=\"secondary\">\n            <Card.Header>\n              <Link\n                className='story-link'\n                to={`/stories/${story._id}`}>\n                {story.title}\n              </Link>\n            </Card.Header>\n            <Card.Body>\n              <Card.Title>\n                {story.description}\n              </Card.Title>\n              <Card.Subtitle>\n                {story.author}\n              </Card.Subtitle>\n              {/* <Card.Text>\n                {moment(date).format('MM-DD-YYYY')}\n              </Card.Text> */}\n            </Card.Body>\n          </Card>\n        </Col>\n      ))\n    }\n\n    return (\n      <>\n        <div className='main'><img className='main-img' src={process.env.PUBLIC_URL + '/main.jpeg'}/></div>\n        <div className='main-content'>\n          <h3 className='page-title'>{userOnly ? 'My Stories' : 'Stories'}</h3>\n          <Row xs={1} md={3} className=\"g-4\">\n            {storiesJSX}\n          </Row>\n        </div>\n      </>\n    )\n  }\n}\n\nexport default IndexStories\n","import React, { Component } from 'react'\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\n\nimport { withRouter } from 'react-router-dom'\n\n// import EventForm from '../shared/EventForm'\n\nimport { createStory } from '../../api/story'\n\nclass CreateStory extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      title: '',\n      author: '',\n      description: '',\n      date: '',\n      content: '',\n      owner: ''\n    }\n  }\n\n  handleChange = (event) => {\n    // The event.target of this event will be an input element\n    // Which will have a `name` attribute (key in the state) & a `value` (what the user typed)\n    this.setState({ [event.target.name]: event.target.value })\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault()\n    // add history below to do the push\n    const { user, msgAlert, history } = this.props\n\n    createStory(this.state, user)\n      .then(res => history.push('/stories/' + res.data.story._id))\n      .then(() => msgAlert({ heading: 'Story Created!', message: 'Thanks for sharing!', variant: 'success' }))\n      .catch(err => {\n        msgAlert({\n          heading: 'Story creation failed :(',\n          message: 'Something went wrong: ' + err.message,\n          variant: 'danger'\n        })\n      })\n  }\n\n  render () {\n    return (\n      <>\n        <div className='form-box'>\n          <div className='row'>\n            <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n              <h3 className='page-title'>Tell Your Story</h3>\n              <Form onSubmit={this.handleSubmit}>\n                <Form.Group controlId='title'>\n                  <Form.Label>Story Title</Form.Label>\n                  <Form.Control\n                    required\n                    name='title'\n                    value={this.state.title}\n                    placeholder='Story title'\n                    onChange={this.handleChange}\n                  />\n                </Form.Group>\n                <Form.Group controlId='author'>\n                  <Form.Label>Written By</Form.Label>\n                  <Form.Control\n                    required\n                    name='author'\n                    value={this.state.author}\n                    placeholder='Author'\n                    onChange={this.handleChange}\n                  />\n                </Form.Group>\n                <Form.Group controlId='description'>\n                  <Form.Label>Story Description</Form.Label>\n                  <Form.Control\n                    as='textarea'\n                    rows='{5}'\n                    required\n                    name='description'\n                    value={this.state.description}\n                    placeholder='Something simple about your story'\n                    onChange={this.handleChange}\n                  />\n                </Form.Group>\n                <Form.Group controlId='date'>\n                  <Form.Label>Date Today</Form.Label>\n                  <Form.Control\n                    required\n                    name='date'\n                    type='date'\n                    value={this.state.date}\n                    placeholder='Date'\n                    onChange={this.handleChange}\n                  />\n                </Form.Group>\n                <Form.Group controlId='content'>\n                  <Form.Label>Your Story</Form.Label>\n                  <Form.Control\n                    as='textarea'\n                    rows='{1000}'\n                    required\n                    name='content'\n                    value={this.state.content}\n                    placeholder='Tell Your Story Here!'\n                    onChange={this.handleChange}\n                  />\n                </Form.Group>\n                <Button type='submit'>Publish</Button>\n              </Form>\n            </div>\n          </div>\n        </div>\n      </>\n    )\n  }\n}\n// add withRouter() when doing the history push above\nexport default withRouter(CreateStory)\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { deleteStory, showStory, likeStory } from '../../api/story'\nimport Button from 'react-bootstrap/Button'\nimport moment from 'moment'\n\nclass ShowStory extends Component {\n  constructor (props) {\n    super(props)\n    // super is necessary so that we can use the props properly and change them along the way\n    // building this component to be an instance of this class and we are using props as an argument to supply data, props are passed where we evoke the instance of this class component 'app.js'\n\n    this.state = {\n      story: null,\n      liked: false\n    }\n  }\n\n  componentDidMount () {\n    const { match, user, msgAlert } = this.props\n\n    //   likeStory(match.params.id, user, isLiked, storyId)\n    //     .then((res) => this.setState({ story: res.data.story }))\n    //   // .then(() => {\n    //   //   this.setState({ liked: this.state.story.likes.filter(like => like.user === user.id) })\n    //   // })\n    //     .then(() => {\n    //       msgAlert({\n    //         heading: 'Success',\n    //         message: 'Enjoy the read!',\n    //         variant: 'success'\n    //       })\n    //     })\n    //     .catch((error) => {\n    //       msgAlert({\n    //         heading: 'Show story failed',\n    //         message: 'Error message: ' + error.message,\n    //         variant: 'danger'\n    //       })\n    //     })\n    // }\n\n    showStory(match.params.id, user)\n      .then(res => this.setState({ story: res.data.story }))\n      .then(() => {\n        this.setState({ liked: this.state.story.likes.findIndex(like => like.user === user.id) > -1 })\n        // console.log(this.state)\n      })\n      .then(() => {\n        msgAlert({\n          heading: 'Success',\n          message: 'Enjoy the read!',\n          variant: 'success'\n        })\n      })\n      .catch(error => {\n        msgAlert({\n          heading: 'Show story failed',\n          message: 'Error message: ' + error.message,\n          variant: 'danger'\n        })\n      })\n  }\n\n  // componentDidUpdate () {\n  //   const { match, user, msgAlert } = this.props\n\n  //   likeStory(match.params.id, user, isLiked, storyId)\n  //     .then((res) => this.setState({ story: res.data.story }))\n  //   // .then(() => {\n  //   //   this.setState({ liked: this.state.story.likes.filter(like => like.user === user.id) })\n  //   // })\n  //     .then(() => {\n  //       msgAlert({\n  //         heading: 'Success',\n  //         message: 'Enjoy the read!',\n  //         variant: 'success'\n  //       })\n  //     })\n  //     .catch((error) => {\n  //       msgAlert({\n  //         heading: 'Show story failed',\n  //         message: 'Error message: ' + error.message,\n  //         variant: 'danger'\n  //       })\n  //     })\n  // }\n\n  handleDelete = () => {\n    const { match, user, msgAlert, history } = this.props // destructuring out router stuff and user\n    // destructuring = const user = this.props.user\n    // match is from react-router-dom and lets us reference the url\n\n    deleteStory(match.params.id, user)\n      .then(() => history.push('/my-stories'))\n      .then(() => {\n        msgAlert({\n          heading: 'Success',\n          message: 'You deleted a story!',\n          variant: 'success'\n        })\n      })\n      .catch(error => {\n        msgAlert({\n          heading: 'Deletion failed',\n          message: 'Story Delete Error: ' + error.message,\n          variant: 'danger'\n        })\n      })\n  }\n\n  handleLike = (event) => {\n    event.preventDefault()\n    const storyId = this.state.story._id\n    const { match, user, msgAlert } = this.props\n    // this.setState((prevState) => {\n    //   return { liked: !prevState.liked }\n    // })\n    const isLiked = this.state.liked\n    likeStory(match.params.id, user, isLiked, storyId) // must add story or storyId\n      .then((res) =>\n        this.setState({ liked: !isLiked })\n      )\n      // .then(console.log(this.state))\n      .catch(error => {\n        msgAlert({\n          heading: 'Like Failed',\n          message: 'Something went wrong: ' + error.message,\n          variant: 'danger'\n        })\n      })\n  }\n\n  //   export const likeStory = (id, user, like) => {\n  //   return axios({\n  //     method: 'PATCH',\n  //     url: apiUrl + '/like/' + id,\n  //     data: {\n  //       likes: {\n  //         user: user._id,\n  //         likeStatus: like\n  //       }\n  //     },\n  //     headers: {\n  //       Authorization: `Bearer ${user.token}`\n  //     }\n  //   })\n  // }\n\n  //   // let initial state of like = false\n  //   // let button text = like\n  //   // once the button is clicked, let state = true\n  //   // let button text equal 'Liked!'\n  //   // if button is clicked again, let state = false\n  //   // let button text = unliked\n  //   // save all data to server\n\n  render () {\n    // const { liked } = this.state.liked\n    if (this.state.story === null) {\n      return 'loading...'\n    }\n\n    // let likedJSX = this.state.liked\n    // if (liked === false) {\n    //   likedJSX = 'Like'\n    // } else if (liked === true) {\n    //   likedJSX = 'Liked!'\n    // }\n\n    //  add owner back in\n    const { title, author, description, date, content, owner } = this.state.story\n    const { user, history, match } = this.props\n\n    // const likedJSX = () => {\n    //   if (this.state.liked === true) {\n    //     return <Button>Liked!</Button>\n    //   }\n    //   if (this.state.liked === false) {\n    //     return <Button>Like</Button>\n    //   }\n    // }\n    return (\n      <>\n        <h3 className='story-title'>{title}</h3>\n        <div className='story-details'>\n          <h6 className='story-details-title'>Written by:</h6>\n          <p className='story-details-info'> {author}</p>\n          <h6 className='story-details-title'>Posted:</h6>\n          <p className='story-details-info'>{moment.utc(date).format('MM-DD-YYYY')}</p>\n          <h6 className='story-details-title'>Description:</h6>\n          <p className='story-details-info'> {description}</p>\n          <h6 className='story-details-title'>Story:</h6>\n          <p className='story-details-info'>{content}</p>\n          {/* <!-- Button trigger modal --> */}\n          {/* <button type=\"button\" className = \"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModalCenter\">\n            Comment\n          </button> */}\n          {/* <!-- Modal --> */}\n          {/* <div className=\"modal fade\" id=\"exampleModalCenter\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\n            <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n              <div className=\"modal-content\">\n                <div className=\"modal-header\">\n                  <h5 className=\"modal-title\" id=\"exampleModalLongTitle\">Modal title</h5>\n                  <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                  </button>\n                </div>\n                <div className=\"modal-body\">\n                  ...\n                </div>\n                <div className=\"modal-footer\">\n                  <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                  <button type=\"button\" className=\"btn btn-primary\">Save changes</button>\n                </div>\n              </div>\n            </div>\n          </div> */}\n          {/* <Button type='submit'>Comment</Button> */}\n          {user._id === owner && (\n            <>\n              <Button size='sm' onClick={this.handleDelete}>Delete</Button>\n              <Button size='sm' onClick={() => history.push(`/my-stories/${match.params.id}/edit-story`)}>Edit</Button>\n            </>\n          )}\n          {/* This button allow a user to like to like/unlike this story */}\n          {/* <Button type='submit' size='sm' onClick={this.handleLike}>{this.state.liked ? 'Like' : 'Liked!'}</Button> */}\n        </div>\n      </>\n    )\n  }\n}\n\n// component MUST be wrapped to use withRouter\nexport default withRouter(ShowStory)\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n// API request\nimport { updateStory, showStory } from '../../api/story'\n// import MovieForm from '../shared/MovieForm'\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\n\nclass UpdateStory extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      title: '',\n      author: '',\n      description: '',\n      date: '',\n      content: '',\n      owner: ''\n    }\n  }\n\n  componentDidMount () {\n    // one of the automatic router props we get is the match object - that has data about the params in our front-end route url\n    const { match, user, msgAlert } = this.props\n\n    showStory(match.params.id, user)\n      .then(res => this.setState({ story: res.data.story }))\n      .then(() => msgAlert({\n        heading: 'Success',\n        message: 'Enjoy the read! ',\n        variant: 'success'\n      }))\n      .catch(err => msgAlert({\n        heading: 'Failure... :(',\n        message: 'Something went wrong: ' + err.message,\n        variant: 'danger'\n      }))\n  }\n\n  handleChange = (event) =>\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n\n    handleSubmit = (event) => {\n      event.preventDefault()\n\n      const { user, msgAlert, history, match } = this.props\n\n      updateStory(this.state, match.params.id, user)\n        .then(res => history.push('/stories/' + match.params.id))\n        .then(() => msgAlert({\n          heading: 'Story Updated!',\n          message: 'Your edits have been applied.',\n          variant: 'success'\n        }))\n        .catch(err => {\n          msgAlert({\n            heading: 'Story edits failed :(',\n            message: 'Something went wrong: ' + err.message,\n            variant: 'danger'\n          })\n        })\n    }\n\n    render () {\n      return (\n        <>\n          <div className='form-box'>\n            <div className='row'>\n              <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n                <h3 className='page-title'>Edit Your Story</h3>\n                <Form onSubmit={this.handleSubmit}>\n                  <Form.Group controlId='title'>\n                    <Form.Label>Story Title</Form.Label>\n                    <Form.Control\n                      name='title'\n                      value={this.state.title}\n                      placeholder={this.state.story?.title}\n                      onChange={this.handleChange}\n                    />\n                  </Form.Group>\n                  <Form.Group controlId='author'>\n                    <Form.Label>Author</Form.Label>\n                    <Form.Control\n                      name='author'\n                      value={this.state.author}\n                      placeholder={this.state.story?.author}\n                      onChange={this.handleChange}\n                    />\n                    <Form.Group controlId='description'>\n                      <Form.Label>Description</Form.Label>\n                      <Form.Control\n                        as='textarea'\n                        rows='{5}'\n                        name='description'\n                        value={this.state.description}\n                        placeholder={this.state.story?.description}\n                        onChange={this.handleChange}\n                      />\n                    </Form.Group>\n                  </Form.Group>\n                  <Form.Group controlId='date'>\n                    <Form.Label>Date</Form.Label>\n                    <Form.Control\n                      name='date'\n                      type='date'\n                      value={this.state.date}\n                      placeholder={this.state.story?.date}\n                      onChange={this.handleChange}\n                    />\n                  </Form.Group>\n                  <Form.Group controlId='content'>\n                    <Form.Label>Your Story</Form.Label>\n                    <Form.Control\n                      as='textarea'\n                      rows='{1000}'\n                      name='content'\n                      value={this.state.content}\n                      placeholder={this.state.story?.content}\n                      onChange={this.handleChange}\n                    />\n                  </Form.Group>\n                  <Button type='submit'>Submit Edit</Button>\n                </Form>\n              </div>\n            </div>\n          </div>\n        </>\n      )\n    }\n}\n\nexport default withRouter(UpdateStory)\n","import React, { Component } from 'react'\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\n\nimport { withRouter } from 'react-router-dom'\n\n// import EventForm from '../shared/EventForm'\n\nimport { createComment } from '../../api/comment'\n\nclass LeaveComment extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      title: '',\n      content: '',\n      storyId: ''\n    }\n  }\n\n  handleChange = (event) => {\n    // The event.target of this event will be an input element\n    // Which will have a `name` attribute (key in the state) & a `value` (what the user typed)\n    this.setState({ [event.target.name]: event.target.value })\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault()\n    // add history below to do the push\n    const { user, msgAlert, history } = this.props\n\n    createComment(this.state, user)\n      .then(res => history.push('/stories/' + res.data.comment._id))\n      .then(() => msgAlert({ heading: 'Comment Created!', message: 'Thanks for sharing!', variant: 'success' }))\n      .catch(err => {\n        msgAlert({\n          heading: 'Comment creation failed :(',\n          message: 'Something went wrong: ' + err.message,\n          variant: 'danger'\n        })\n      })\n  }\n\n  render () {\n    return (\n      <>\n        <div className='form-box'>\n          <div className='row'>\n            <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n              <h3 className='page-title'>Tell Your Story</h3>\n              <Form onSubmit={this.handleSubmit}>\n                <Form.Group controlId='title'>\n                  <Form.Label>Story Title</Form.Label>\n                  <Form.Control\n                    required\n                    name='title'\n                    value={this.state.title}\n                    placeholder='Story title'\n                    onChange={this.handleChange}\n                  />\n                </Form.Group>\n                <Form.Group controlId='author'>\n                  <Form.Label>Written By</Form.Label>\n                  <Form.Control\n                    required\n                    name='author'\n                    value={this.state.author}\n                    placeholder='Author'\n                    onChange={this.handleChange}\n                  />\n                </Form.Group>\n                <Form.Group controlId='description'>\n                  <Form.Label>Story Description</Form.Label>\n                  <Form.Control\n                    required\n                    name='description'\n                    value={this.state.description}\n                    placeholder='Something simple about your story'\n                    onChange={this.handleChange}\n                  />\n                </Form.Group>\n                <Form.Group controlId='date'>\n                  <Form.Label>Date Today</Form.Label>\n                  <Form.Control\n                    required\n                    name='date'\n                    type='date'\n                    value={this.state.date}\n                    placeholder='Date'\n                    onChange={this.handleChange}\n                  />\n                </Form.Group>\n                <Form.Group controlId='content'>\n                  <Form.Label>Your Story</Form.Label>\n                  <Form.Control\n                    required\n                    name='content'\n                    value={this.state.content}\n                    placeholder='Tell Your Story Here!'\n                    onChange={this.handleChange}\n                  />\n                </Form.Group>\n                <Button type='submit'>Publish</Button>\n              </Form>\n            </div>\n          </div>\n        </div>\n      </>\n    )\n  }\n}\n// add withRouter() when doing the history push above\nexport default withRouter(LeaveComment)\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\nexport const createComment = (data, user) => {\n  return axios({\n    method: 'POST',\n    url: apiUrl + '/comments',\n    data: {\n      comment: data\n    },\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n\nexport const deleteComment = (id, user) => {\n  return axios({\n    method: 'DELETE',\n    url: apiUrl + '/comments/' + id,\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n\nexport const updateComment = (data, id, user) => {\n  return axios({\n    method: 'PATCH',\n    url: apiUrl + '/comments/' + id,\n    data: {\n      story: {\n        title: data.title,\n        content: data.content,\n        storyId: data.story.id\n      }\n    },\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n","import React, { Component } from 'react'\n// import { Link } from 'react-router-dom'\n// import Card from 'react-bootstrap/Card'\nimport Row from 'react-bootstrap/Row'\n// import Col from 'react-bootstrap/Col'\nimport '../../index.scss'\n// import moment from 'moment'\n\nclass HomePage extends Component {\n  render () {\n    return (\n      <>\n        <div className='main'><img className='main-img' src={process.env.PUBLIC_URL + '/main.jpeg'}/></div>\n        <div className='main-content'>\n          <Row xs={1} md={3} className=\"g-4\">\n          </Row>\n          <h3 className='home-page-title'>Welcome to StoryTellers!</h3>\n          <p className='home-page-content'>Come share your stories, be they truth or fiction! The idea behind this app was to bring about a creative space for people to exercise their minds in writing. There is something special about plunking away at a keyboard and telling a story that we believe is therapeutic, and allows a person to let their mind breathe. The intention is to connect people through stories as a way of seeing the commonalities we share in thought, but also the very unique differences. The mind is an incredible thing! Exercise it! Be imaginative! Tell a story!</p>\n          <Row xs={1} md={3} className=\"g-4\">\n          </Row>\n        </div>\n      </>\n    )\n  }\n}\n\nexport default HomePage\n","/* eslint-disable no-tabs */\nimport React, { Component, Fragment } from 'react'\nimport { Route } from 'react-router-dom'\nimport { v4 as uuid } from 'uuid'\n\nimport AuthenticatedRoute from './components/AuthenticatedRoute/AuthenticatedRoute'\nimport AutoDismissAlert from './components/AutoDismissAlert/AutoDismissAlert'\nimport Header from './components/Header/Header'\nimport SignUp from './components/auth/SignUp'\nimport SignIn from './components/auth/SignIn'\nimport SignOut from './components/auth/SignOut'\nimport ChangePassword from './components/auth/ChangePassword'\n\nimport IndexStories from './components/story/Index'\nimport CreateStory from './components/story/Create'\nimport ShowStory from './components/story/Show'\nimport UpdateStory from './components/story/Update'\nimport LeaveComment from './components/comments/Create'\nimport HomePage from './components/homepage/Home'\n\nclass App extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      user: null,\n      msgAlerts: []\n    }\n  }\n\n  setUser = (user) => this.setState({ user })\n\n  clearUser = () => this.setState({ user: null })\n\n  deleteAlert = (id) => {\n    this.setState((state) => {\n      return { msgAlerts: state.msgAlerts.filter((msg) => msg.id !== id) }\n    })\n  }\n\n  msgAlert = ({ heading, message, variant }) => {\n    const id = uuid()\n    this.setState((state) => {\n      return {\n        msgAlerts: [...state.msgAlerts, { heading, message, variant, id }]\n      }\n    })\n  }\n\n  render () {\n    const { msgAlerts, user } = this.state\n\n    return (\n      <Fragment>\n\t      <Header user={user} />\n\t      {msgAlerts.map((msgAlert) => (\n          <AutoDismissAlert\n            key={msgAlert.id}\n            heading={msgAlert.heading}\n            variant={msgAlert.variant}\n            message={msgAlert.message}\n            id={msgAlert.id}\n            deleteAlert={this.deleteAlert}\n          />\n        ))}\n\t      <main className='container'>\n          <Route\n            exact\n            path='/'\n            render={() => (\n              <HomePage msgAlert={this.msgAlert} setUser={this.setUser} />\n            )}\n          />\n\t        <Route\n            path='/sign-up'\n            render={() => (\n              <SignUp msgAlert={this.msgAlert} setUser={this.setUser} />\n            )}\n          />\n          <Route\n            path='/sign-in'\n            render={() => (\n              <SignIn msgAlert={this.msgAlert} setUser={this.setUser} />\n            )}\n          />\n          <AuthenticatedRoute\n            user={user}\n            path='/sign-out'\n            render={() => (\n              <SignOut\n                msgAlert={this.msgAlert}\n                clearUser={this.clearUser}\n                user={user}\n              />\n            )}\n          />\n          <AuthenticatedRoute\n            user={user}\n            path='/change-password'\n            render={() => (\n              <ChangePassword msgAlert={this.msgAlert} user={user} />\n            )}\n          />\n          <AuthenticatedRoute\n            user={user}\n            path='/tell-a-story'\n            render={() => <CreateStory msgAlert={this.msgAlert} user={user} />}\n          />\n          <AuthenticatedRoute\n            exact\n            user={user}\n            path='/all-stories'\n            render={() => <IndexStories msgAlert={this.msgAlert} user={user} userOnly={false}/>}\n          />\n          <AuthenticatedRoute\n            exact\n            user={user}\n            path='/stories/:id'\n            render={() => <ShowStory msgAlert={this.msgAlert} user={user} />}\n          />\n          <AuthenticatedRoute\n            exact\n            user={user}\n            path='/my-stories'\n            // userOnly prop used for filtering events that only belong to the user\n            render={() => <IndexStories msgAlert={this.msgAlert} user={user} userOnly={true} />}\n          />\n          <AuthenticatedRoute\n            exact\n            user={user}\n            path='/my-stories/:id/edit-story'\n            render={() => <UpdateStory msgAlert={this.msgAlert} user={user} />}\n          />\n          <AuthenticatedRoute\n            exact\n            user={user}\n            path='/stories/:id/comment'\n            render={() => <LeaveComment msgAlert={this.msgAlert} user={user} />}\n          />\n        </main>\n      </Fragment>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\n\nimport App from './App'\nimport { BrowserRouter } from 'react-router-dom'\n\nconst appJsx = (\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>\n)\n\nReactDOM.render(appJsx, document.getElementById('root'))\n"],"sourceRoot":""}